/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define CHA 0
#define NAV 1
#define MEDIA 2
#define RESET 3

&mt {
    tapping-term-ms = <400>;
};

/ {

        behaviors {
                skq: sticky_key_quick_release {
                        compatible = "zmk,behavior-sticky-key";
                        #binding-cells = <1>;
                        bindings = <&kp>;
                        release-after-ms = <1000>;
                        quick-release;
                        ignore-modifiers;
                };
        };

        macros {
                this_macro: this_macro {
                        label = "this_macro";
                        compatible = "zmk,behavior-macro";
                        tap-ms = <1>; 
                        wait-ms = <1>;
                        #binding-cells = <0>;
                        bindings = <&kp DOLLAR &kp T &kp H &kp I &kp S &kp KP_MINUS &kp GT>;
                };

                eol_nl_macro: eol_nl_macro {
                        label = "eol_nl_macro";
                        compatible = "zmk,behavior-macro";
                        tap-ms = <1>;
                        wait-ms = <1>;
                        #binding-cells = <0>;
                        bindings = <&kp END &kp SEMICOLON &kp RETURN>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_esc { 
                        timeout-ms = <50>;
                        key-positions = <8 9>;
                        bindings = <&kp ESC>;
                };

                eol_nl {
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = < &eol_nl_macro>;
                };

                next_page {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp LC(PAGE_UP)>;
                };

                prev_page {
                        timeout-ms = <50>;
                        key-positions = <31 32>;
                        bindings = <&kp LC(PAGE_DOWN)>;
                };


                this_combo {
                        timeout-ms = <50>;
                        key-positions = <3>;
                        bindings = < &this_macro >;
                };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
        &kp ESCAPE      &mt N1  MINUS    &mt N2   GT     &mt N3    DLLR     &mt DOT       DOLLAR      &mt AMPS   Q            &kp V                &kp             Z              &mt STAR         Y         &mt FSLH          J     &mt PIPE        K        &to 2
        &to NAV         &mt N4  R        &mt N5   N      &mt N6    L        &mt N0        O           &mt TILDE  E            &mt UP_ARROW   T     &mt DOWN_ARROW  A              &mt LEFT_ARROW   I         &mt RIGHT_ARROW   S     &mt PAGE_UP     H        &mt LSHFT  ENTER
        &lt NAV X       &mt N7  W        &mt N8   B      &mt N9    P        &mt COMMA     M           &mt GRAVE  C            &mt INSERT     D     &mt HOME        U              &mt END          F         &mt DEL           G     &mt PAGE_DOWN   TAB      &kp FSLH
                                                         &mt LCTRL LBKT     &kp LEFT_GUI              &mt LEFT_GUI SPACE      &kp LSHFT            &mt RALT        BACKSPACE      &mt RCTRL        RBKT
                        >;
                };

                nav_layer {
                        bindings = <
        &trans          &kp N1           &kp N2          &kp N3             &kp DOT                   &kp AMPS               &trans               &kp MINUS                       &kp STAR                   &kp FSLH               &kp PIPE                  &to 2
        &to CHA         &kp N4           &kp N5          &kp N6             &kp N0                    &kp TILDE              &kp UP_ARROW         &kp DOWN_ARROW                  &kp LEFT_ARROW             &kp RIGHT_ARROW        &kp PAGE_UP               &kp LEFT_SHIFT
        &trans          &kp N7           &kp N8          &kp N9             &kp COMMA                 &kp GRAVE              &kp INSERT           &kp HOME                        &kp END                    &kp DEL                &kp PAGE_DOWN             &to 3
                                                         &kp LEFT_GUI       &kp TAB                   &kp SPACE              &kp ENTER            &trans                          &kp BACKSPACE
                        >;
                };

                media_layer {
                        bindings = <
        &trans          &kp F1          &kp F2         &kp F3             &kp F4                    &kp K_VOLUME_DOWN       &kp K_VOLUME_UP      &kp K_MUTE              &kp K_PLAY_PAUSE        &kp GRAVE             &kp LCTRL       &to 2
        &to CHA         &kp F5          &kp F6         &kp F7             &kp F8                    &kp C_PREVIOUS          &kp C_NEXT           &kp LBRC                &kp RBRC                &kp PIPE              &kp TILDE       &trans
        &kp LSHFT       &kp F9          &kp F10        &kp F11            &kp F12                   &trans                  &trans               &trans                  &trans                  &trans                &trans          &trans
                                                       &trans             &trans                    &trans                  &trans               &trans                   &trans   
                        >;  
                };

                reset_layer {
                        bindings = <
        &trans          &kp F1          &kp F2         &kp F3             &kp F4                    &kp K_VOLUME_DOWN       &bt BT_CLR           &bt BT_PRV              &bt BT_NXT              &kp GRAVE             &kp LCTRL       &to 1
        &to CHA         &kp F5          &kp F6         &kp F7             &kp F8                    &kp C_PREVIOUS          &bt BT_SEL 0         &bt BT_SEL 1            &bt BT_SEL 2            &kp PIPE              &kp TILDE       &trans
        &kp LSHFT       &kp F9          &kp F10        &kp F11            &kp F12                   &trans                  &trans               &trans                  &trans                  &trans                &trans          &trans
                                                       &trans             &trans                    &trans                  &trans               &trans                   &trans   
                        >;
                };
        };
};
